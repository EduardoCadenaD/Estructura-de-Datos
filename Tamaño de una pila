/*
 ESTRUCTURA DE DATOS

 Ejercicio: Pilas 1
//Last in - First Out

 * Nombre: Viviana Marcela Peña Márquez. 
 * Fecha: Jueves, 7 de mayo de 2015.
 * Institución: Konrad Lorenz Fundación Universitaria.
 * Profesora: Mireya Gómez Bernal.

 Enunciado:

Realizar un procedimiento que cuente la cantidad de elementos de una pila.
Las estructuras deben quedar en el estado original.

 */
 
 //// PAQUETE Control
 /// CLASE Ejecutar
 
 package Control;

import Modelo.Pilas;
import Vista.InOut;

public class Ejecutar {

    public static void main(String[] args) {
       
        InOut ob = new InOut();
        
        ob.mostrarInfo("¡Bienvenidx!\nPrimer programa de listas.");
        
        Pilas p = new Pilas();
        p.tamano();
       
        
    }
    
}


//// PAQUETE Modelo
/// CLASE Pilas

package Modelo;

import Vista.InOut;
import java.util.Stack;

public class Pilas {
    
    Stack pilas;
    InOut ob = new InOut();
    
     public Pilas(){
         
         this.pilas = new Stack();
         
         String a = ob.solicitarInfo("Ingrese un dato para agregar a la pila:");
         
         this.pilas.add(a);
         
         while(true){
            boolean aux = ob.solicitarBoolean("\n¿Desea ingresar un nuevo dato a la pila?");
            if(aux==false){
                break;
            }
            a = ob.solicitarInfo("Ingrese un dato para agregar a la pila:");
            this.pilas.add(a);
        }

     }
     
     public void tamano(){
         
        int tam = this.pilas.size();
        
        ob.mostrarInfo("El tamaño de la pila es "+tam+".");
         
     }
     
     
    
}

//// PAQUETE Vista
/// CLASE InOut

package Vista;

import javax.swing.JOptionPane;

public class InOut {
    
    //Este método se encarga de solicitar string.
    public String solicitarInfo(String mensaje) {
        String s = JOptionPane.showInputDialog(mensaje);
        return s;
    }

    //Este método se encarga de solicitar entero.
    public int solicitarEntero(String mensaje) {
        String s = JOptionPane.showInputDialog(mensaje);

        while (validarStringEntero(s) == false) {
            s = JOptionPane.showInputDialog("DATO NO VÁLIDO\n" + mensaje);
        }

        int n = Integer.parseInt(s);

        return n;
    }

    //Este método se encarga de solicitar entero.
    public int solicitarEnteroPositivo(String mensaje) {
        String s = JOptionPane.showInputDialog(mensaje);

        while (validarStringEnteroPositivo(s) == false) {
            s = JOptionPane.showInputDialog("DATO NO VÁLIDO\n" + mensaje);
        }

        int n = Integer.parseInt(s);

        return n;
    }

    //Este método se encarga de solicitar boolean.
    public boolean solicitarBoolean(String mensaje) {
        if (JOptionPane.showConfirmDialog(null, mensaje, mensaje,
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

            return true;
        } else {
            return false;
        }
    }

    //Este método muestra en pantalla el resultado.
    public void mostrarInfo(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje);
        //Null=Ubicación de Mensaje.
    }

    public boolean validarStringEntero(String n) {
        if ((n).matches("[-]?[0-9]+")) {
            return true;
        } else {
            return false;
        }
    }

    public boolean validarStringEnteroPositivo(String n) {
        if ((n).matches("[0-9]+")) {
            if (Integer.parseInt(n) > 0) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }
    
}

